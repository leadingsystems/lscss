@mixin ls_contentWrapper() {
  width: 190rem;
  max-width: 85%;
  margin-left: auto;
  margin-right: auto;
  position: relative;

  [class*="layout-sidebar"] #main &,
  [class*="layout-sidebar"] #left &,
  [class*="layout-sidebar"] #right & {
    max-width: 100%;
  }
}

@mixin ls_mediumContentWrapper() {
  width: 120rem;
  max-width: 85%;
  margin-left: auto;
  margin-right: auto;
  position: relative;

  [class*="layout-sidebar"] #main &,
  [class*="layout-sidebar"] #left &,
  [class*="layout-sidebar"] #right & {
    max-width: 100%;
  }
}

@mixin ls_narrowContentWrapper() {
  width: 90rem;
  max-width: 85%;
  margin-left: auto;
  margin-right: auto;
  position: relative;

  [class*="layout-sidebar"] #main &,
  [class*="layout-sidebar"] #left &,
  [class*="layout-sidebar"] #right & {
    max-width: 100%;
  }
}

@mixin ls_superNarrowContentWrapper() {
  width: 60rem;
  max-width: 85%;
  margin-left: auto;
  margin-right: auto;
  position: relative;

  [class*="layout-sidebar"] #main &,
  [class*="layout-sidebar"] #left &,
  [class*="layout-sidebar"] #right & {
    max-width: 100%;
  }
}

@mixin ls_defaultButton_base() {
  display: inline-block;
  background: $ls-color-white;
  text-shadow: none;
  color: $ls-color-black;
  border: solid 0.2rem $ls-color-black;
  padding: 1.2rem 3rem;
}

@mixin ls_defaultButton() {
  @include ls_defaultButton_base;
}

@mixin ls_sameLine() {
  > * {
    display: inline-block;
    vertical-align: middle;
  }
}

@mixin ls_autohideCenterMessage() {
  @include ls_autohide;
  margin: auto;
  padding: 4rem;
  position: fixed;
  width: 60%;
  text-align: center;
  z-index: 99900;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: $ls-color-black;
  color: $ls-color-white;
}

@mixin ls_dynamicBackground() {
  transform: perspective(0.1rem) translateZ(0);
  position: relative;
  transition-property: color;
  transition-duration: 0.3s;
  &:after {
    content: "";
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: $ls-color-black;
    transform: scaleX(0);
    transform-origin: 0 50%;
    transition-property: transform;
    transition-duration: 0.4s;
    transition-timing-function: ease-out;
  }
  &:hover,
  &:active,
  &:focus {
    color: $ls-color-white !important;
    &:after {
      transform: scaleX(1);
    }
  }
}

@mixin ls_dynamicUnderline() {
  position: relative;

  &::before {
    content: '';
    width: 100%;
    height: 0.1rem;
    position: absolute;
    left: 0;
    bottom: -0.1rem;
    background-color: currentColor;

    transform: scale(1, 1);
    transform-origin: left center;
    transition: transform 0.2s ease-in-out;
  }

  &:hover::before {
    transform: scale(0, 1);
  }
}

@mixin ls_decreaseFontSizes($font-size-base, $steps: $ls-font-resize-steps-standard-headlines) {
  @each $breakpoint, $percentage in $steps {
    @media screen and(max-width: $breakpoint) {
      font-size: $font-size-base * $percentage;
    }
  }
}