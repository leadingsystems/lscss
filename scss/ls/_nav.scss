@mixin navFoldUntouched() {
  ul {
    /*
     * CSS doesn't support transitions from height 0 to height auto, so without any additional javascript,
     * this styling will toggle submenus without a soft transition. Using javascript, the height of an
     * element that is not collapsed can be set to a specific number, thus making the soft transition work.
     */
    overflow: hidden;
    transition: height 0.3s ease-out;
    height: auto;
  }

  &:not(.touched) {
    > ul {
      height: 0;
    }
  }
}

@mixin navFoldIcons() {
  > a,
  > span,
  > strong {
    &.submenu {
      padding-right: 1.6rem;
      position: relative;
      cursor: pointer;

      &::after {
        @extend .fa;
        content: fa-content($fa-var-plus);
        position: absolute;
        right: 0.32rem;
        top: 1.12rem;
        font-size: 50%;
      }
    }
  }

  &.touched {
    > a,
    > span,
    > strong {
      &.submenu {
        &::after {
          content: fa-content($fa-var-minus);
        }
      }
    }
  }
}

nav.lscss-standard-navigation {
  overflow: visible;
  z-index: 1000;
  position: relative;

  ul,
  ol {
    list-style: none;
    margin: 0;
  }

  ul {
    li {
      span,
      a,
      strong {
        display: block;

        &.trail,
        &.active {
          font-weight: $ls-font-weight-bold;
        }
      }
    }
  }

  /*
   * We use this deep selector because we only want to rely on the actual list structure
   * and not on any additional classes
   */
  > ul {
    > li {
      ul {
        li {
          margin-left: 2.4rem;
        }
      }
    }
  }

  /*
    <- Plus/minus icons
   */

  body.user-is-touching &.useTouchNavi,
  &.useTouchNavi.useTouchNaviOnNonTouchDevices {
    &.nav-fold,
    &.nav-fold-from-1 {
      ul li {
        @include navFoldUntouched;
        @include navFoldIcons;
      }
    }

    &.nav-fold-from-1-exclude-2 {
      > ul > li {
        @include navFoldUntouched;
        @include navFoldIcons;

        > ul > li ul li {
          @include navFoldUntouched;
          @include navFoldIcons;
        }
      }
    }

    &.nav-fold-from-2 {
      > ul > li ul li {
        @include navFoldUntouched;
        @include navFoldIcons;
      }
    }

    &.nav-fold-from-3 {
      > ul > li > ul > li ul li {
        @include navFoldUntouched;
        @include navFoldIcons;
      }
    }

    &.nav-fold-from-4 {
      > ul > li > ul > li > ul > li ul li {
        @include navFoldUntouched;
        @include navFoldIcons;
      }
    }

    &.nav-fold-from-5 {
      > ul > li > ul > li > ul > li > ul > li ul li {
        @include navFoldUntouched;
        @include navFoldIcons;
      }
    }
  }
}

nav.onlyShowFirstLevel,
.onlyShowFirstLevel > nav {
  > ul {
    > li {
      > ul {
        display: none !important; // Since this is never ever meant to be overwritten, !important is okay here
      }
    }
  }
}

@import "_nav-horizontalNav.scss";